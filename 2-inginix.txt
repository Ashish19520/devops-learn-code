apache and nginix are same apache used to host php while nginix used to host web packages
 NGINX is an open-source web server software that's also used as
  a reverse proxy,
  load balancer, 
  and HTTP cache,
   known for its high performance and efficient resource utilization, 
   especially for handling static content and high traffic volumes. 


installing nginix;

1->sudo apt-get update -y
2->sudo apt get-install nginx -y 
3->systemctl status nginx   #used to check status of nginx
4->systemctl start nginx  #to start the nginx
5->systemctl stop nginx ->to stop the process


to check nginx configuration

also if you stuck and not able to start nginx
The error shows that port 80 (HTTP) is already being used by another service, preventing Nginx from starting. Here's how to fix it:

sudo lsof -i :80
sudo netstat -tulnp | grep :80

Step 2: Stop the Conflicting Service  ####
If Apache is running:

sudo systemctl stop apache2

If another Nginx instance is running:  #####

sudo systemctl stop nginx

If an unknown process is using port 80 (use the PID from Step 1): #####

sudo kill -9 <PID>

Step 3: Start Nginx Again   ####

sudo systemctl start nginx
sudo systemctl status nginx  # Verify it's running


##to see the configurations of nginx


cd /etc/nginx/



ifconfig
docker0: 172.17.0.1  ->default ip for docker
eno1: ethernet ips 

lo: LOOPBACK,RUNNING
       127.0.0.1  locahost for internal configuration

wlp59s0: 
        192.168.2.173  ip assign by router for broadcasting on same network if docker is stop and on docker default we saw apache2 it is because
 
docker used apache to to show nginx home page use localhost default port


in sites-enabled there is a default file we can change the default path and assign a new one

cd /home/admin1/devops->nano devops write config.

then in cd /etc/nginx  nginx.conf in below path add line  include/home/admin1/devops/*  

and to link devops to site-config so if somone change the devops file then automaticitreflects tosited-enabled use on devops folder

sudo ln -s /home/admin1/devops/devops /etc/nginx/sites-available


basically what we do is we create a file on 
location cd /home/admin1/devops/devops
which store address of cd /var/html/htmlfile
we change some html 
and we set this route in nginx.conf file 
sudo ln -s /home/admin1/devops/devops /etc/nginx/sites-available
run this command then run test
we remove the sites-enabled default folder
and site-availablethe html  enabled default folder which store the address of  so asically we link a new file 

html->linked-old->nginx.conf   to html->linked-new-html->nginx.conf


or how to do a reverse-proxy
how to redirect  a port url to diferen port like localhost/3000 to port 80 of nginx

nginix -t  ############# to run test cases

server {
        listen 80 default_server;
        listen [::]:80 default_server;

        # SSL configuration
        #
        # listen 443 ssl default_server;
        # listen [::]:443 ssl default_server;
        #
        # Note: You should disable gzip for SSL traffic.
        # See: https://bugs.debian.org/773332
        #
        # Read up on ssl_ciphers to ensure a secure configuration.
        # See: https://bugs.debian.org/765782
        #
        # Self signed certs generated by the ssl-cert package
        # Don't use them in a production server!
        #
        # include snippets/snakeoil.conf;

        root /var/www/html;

        # Add index.php to the list if you are using PHP
        index index.html index.htm index.nginx-debian.html;

        server_name _;

        location / {
                # First attempt to serve request as file, then
                # as directory, then fall back to displaying a 404.
                try_files $uri $uri/ =404;
        }
}

we edit above to like below not full sut some parts

server {
        listen 80 default_server;
        listen [::]:80 default_server;

        server_name _;

        location / {     
                     root /home/admin1/Desktop/mylearn;    ->>root location of folde
                     index index.html index.htm index.nginx-debian.html;
                     proxy_pass "http://localhost:3000"     -->proxy pass to local host 3000

        }
}

so now 80 is redirect to locahost:3000



########### configuring alias  ############

suppose we run localhost a webiste and if it adds/blog we are going to redirect them on another webiste


server {
        listen 80 default_server;
        listen [::]:80 default_server;

        server_name _;

        location / {
            root /home/admin1/Desktop/mylearn;
            index index.html index.htm index.nginx-debian.html;

                proxy_pass       "http://localhost:3000";


        }

        location /about{                                       ->here we pass a route to the page in case here it is /about
            alias /home/admin1/Desktop/mydev;                   we have to paass directory and directory take the the index file decribe on below line
            index index.html index.htm index.nginx-debian.html;   and we have to start alias in case of using alias
                we can do a deep nested also
        }

}

 location /about{                                      
            alias /home/admin1/Desktop/mydev;
            index index.html index.htm index.nginx-debian.html;
        }


########    nginix authentication  ##################

sudo apt-get-update -y

we insatall php-web server to make the password based authentication it provide a built-in

sudp apt-get install apache2-utils
sudo htpasswd -c /etc/nginx/.htpasswd nginx   ->this will create a .htpasswd file in the /etc/nginx  that store secret passwd last nginx keyword is for user 

here id-nginx
passwd ->pasword u enter

to check if password available on .passwd file run

cat /etc/nginx/.htpasswd

then we change virtual configuration of nginx server and put the password

then paste those files in ypur devops/devops file it is a path changed file

auth_basic "Private Property";
auth_basic_user_file /etc/nginx/.htpasswd; 




to off password authentication for a file use auth_basic off;


#### removing ngix ######

sudo apt-get-update -y
sudo apt-get remove nginx
sudo apt-get purge nginx
sudo apt-get autoremove
sudo apt-get remove nginx nginx-common
sudo apt-get purge nginx nginx-common
sudo apt-get autoremove


to add proxy in nginx 


in the http folder we can create a server block or a upstream block;

upstream backend{
        server localhost:3000;   ->server ip or port no
}

server{
        listen 80;
        root /var/www/dev;

        server_name test_proxy_pass;

        location / {
                proxy_pass http://backend;       ->don;t confuse with backend it is the name of upstream
        }

}




to run mutiple instane of a service, declare a  PORT variable on linux than Start

PORT=8000 node index.js
PORT=8001 node index.js this will bind this port number to this proceess


to add load balancer 

upstream backend{
        server localhost:3000 weight=3 down;
        #down means serveris down now
        #when we add weight =3 now 3 request concurrently handle by first server than second then 3 by first if u want u can remaove weight 
        #->server ip or port no
        server localhost:3001 backup; 
        #when u write backup in the front of serever it is treated as a backup server and all request is gone to first server or main server when the first server goes down then the second server came in picture 
        #->add one more server into it
}

server{
        listen 80;
        root /var/www/dev;

        server_name test_proxy_pass;

        location / {
                add_header Cache-Control no-store
                proxy_pass http://backend;       
                #don;t confuse with backend it is the name of upstream
        }

}




data for cafe codergyan  server

server{
        listen 80 default_server;
        server_name cafe.gyan.com;

        auth_basic "Private Property";
        auth_basic_user_file /etc/nginx/.htpasswd;

        location /{
        auth_basic off;
        root /home/admin1/Desktop/mylearn/build;
        index index.html index.htm index.nginx-debian.html;
         try_files $uri $uri/ =404;
    }

         location /about{
            alias /home/admin1/Desktop/mydev;
            index index.html index.htm index.nginx-debian.html;
        }

}






when u deploying a react project react use client side routing so when we select a route and refresh the page it domain/about
-> it show the 404 error so we have to make a setting in nginx that if a request came on any of the route u shoul have to saw them the home route or index page


 location /{
        auth_basic off;
        root /home/admin1/Desktop/mylearn/build;
        index index.html index.htm index.nginx-debian.html;
         try_files $uri $uri/ /index.html;
    }

 to make http to https for port 443 
 we have to do tls configuration   
 u can use a free or premium ssl certificate from web  we use certbot

 sudo apt update
 apt apt install snap
 sudo snap install core 
 sudo snap refresh core
 sudo snap install --classic certbot
 sudo ln -s /snap/bin/certbot /usr/bin/certbot
 sudo certbot --nginx
 sudo certbot certonly --nginx
 for localhost use self-signed certificates



 if u are using web sockets use this
    server {
        listen 8020;
        location / {
            proxy_pass http://websocket;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;             ->below three lines
            proxy_set_header Connection $connection_upgrade; 
            proxy_set_header Host $host;
        }
    }   


